---
- name: "Validate invocation of _common role"
  ansible.builtin.assert:
    that:
      - "ansible_parent_role_names is defined"
      - "ansible_parent_role_names | default() | length > 0"
    fail_msg: "Error: The '_common' role is a internal role and cannot be invoked directly."
  tags:
    - always

- name: "Gather system user and group facts"
  ansible.builtin.getent:
    database: "{{ item }}"
  loop:
    - passwd
    - group
  tags:
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}"
    - install
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}_install"

- name: "Create system group {{ _common_system_group }}"
  ansible.builtin.group:
    name: "{{ _common_system_group }}"
    system: true
    state: present
  become: true
  when: _common_system_group not in ansible_facts.getent_group
  tags:
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}"
    - install
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}_install"

- name: "Create system user {{ _common_system_user }}"
  ansible.builtin.user:
    name: "{{ _common_system_user }}"
    system: true
    shell: "/usr/sbin/nologin"
    group: "{{ _common_system_group }}"
    home: "{{ _common_config_dir | default('/', true) }}"
    create_home: false
  become: true
  when: _common_system_user not in ansible_facts.getent_passwd
  tags:
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}"
    - install
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}_install"

- name: "Download binary {{ __common_binary_basename }}"
  tags:
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}"
    - install
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}_install"
    - download
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}_download"
  become: false
  delegate_to: localhost
  block:
    - name: "Create localhost binary cache path"
      ansible.builtin.file:
        path: "{{ _common_local_cache_path }}"
        state: directory
        mode: 0755
      check_mode: false

    - name: "Download {{ __common_binary_basename }}"
      ansible.builtin.uri:
        url: "{{ _common_binary_url }}"
        dest: "{{ _common_local_cache_path }}/{{ _common_binary_name | default(__common_binary_basename) }}"
        headers: "{{ __common_github_api_headers }}"
        mode: 0644
        status_code: [200, 203, 204, 206, 300, 301, 302, 303, 304, 307, 308]
        follow_redirects: all
      register: __common_download
      until: __common_download is succeeded
      retries: 5
      delay: 2
      # run_once: true  # <-- this can't be set due to multi-arch support
      check_mode: false

    - name: "Verify checksum of {{ __common_binary_basename }}"
      run_once: true
      check_mode: false
      when: _common_checksums_url is defined
      block:
        - name: "Fetch checksum list for {{ __common_binary_basename }}"
          ansible.builtin.uri:
            url: "{{ _common_checksums_url }}"
            headers: "{{ __common_github_api_headers }}"
            method: GET
            return_content: true
            status_code: [200, 203, 204, 206, 300, 301, 302, 303, 304, 307, 308]
            follow_redirects: all
          register: __common_binary_checksums_raw

        - name: "Parse checksum list for {{ __common_binary_basename }}"
          ansible.builtin.set_fact:
            __common_binary_checksums: "{{ dict(__common_binary_checksums_raw.content.splitlines()
                                        | map('regex_findall', '^([a-fA-F0-9]+)\\s+(.+)$') | map('flatten') | map('reverse')) }}"

        - name: "Calculate checksum of {{ __common_binary_basename }}"
          ansible.builtin.stat:
            path: "{{ _common_local_cache_path }}/{{ _common_binary_name | default(__common_binary_basename) }}"
            checksum_algorithm: sha256
            get_checksum: true
          register: __common_binary_checksum

        - name: "Verify correct checksum of {{ __common_binary_basename }}"
          ansible.builtin.assert:
            that: __common_binary_checksum.stat.checksum == __common_binary_checksums[__common_binary_basename]
            success_msg: "{{ __common_binary_basename }} checksum verified successfully"
            fail_msg: "{{ __common_binary_basename }} checksum mismatch"

    - name: "Unpack binary archive {{ __common_binary_basename }}"
      ansible.builtin.unarchive:
        src: "{{ _common_local_cache_path }}/{{ __common_binary_basename }}"
        dest: "{{ _common_local_cache_path }}"
        mode: 0755
        list_files: true
        extra_opts: "{{ _common_binary_unarchive_opts | default(omit, true) }}"
      check_mode: false
      throttle: 1  # see prometheus-community/ansible#457
      when: __common_binary_basename is search('\.zip$|\.tar\.gz$')

- name: "Check existence of binary install dir"
  ansible.builtin.stat:
    path: "{{ _common_binary_install_dir }}"
  register: __common_binary_install_dir

- name: "Make sure binary install dir exists"
  ansible.builtin.file:
    path: "{{ _common_binary_install_dir }}"
    mode: 0755
    owner: root
    group: root
  become: true
  tags:
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}"
    - install
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}_install"
  when: not __common_binary_install_dir.stat.exists

- name: "Propagate binaries"
  ansible.builtin.copy:
    src: "{{ _common_local_cache_path }}/{{ item }}"
    dest: "{{ _common_binary_install_dir }}/{{ item }}"
    mode: 0755
    owner: root
    group: root
  loop: "{{ _common_binaries }}"
  become: true
  notify:
    - "{{ ansible_parent_role_names | first }} : Restart {{ _common_service_name }}"
  tags:
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}"
    - install
    - "{{ ansible_parent_role_names | first | regex_replace(ansible_collection_name ~ '.', '') }}_install"
