---
- name: Run local preparation
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Download mysqld_exporter binary to local folder
      become: false
      ansible.builtin.get_url:
        url: "https://github.com/prometheus/mysqld_exporter/releases/download/v{{\
          \ mysqld_exporter_version }}/mysqld_exporter-{{ mysqld_exporter_version\
          \ }}.linux-{{ go_arch }}.tar.gz"
        dest: "/tmp/mysqld_exporter-{{ mysqld_exporter_version }}.linux-{{ go_arch\
          \ }}.tar.gz"
        mode: 0644
      register: _download_binary
      until: _download_binary is succeeded
      retries: 5
      delay: 2
      check_mode: false

    - name: Unpack mysqld_exporter binary
      become: false
      ansible.builtin.unarchive:
        src: "/tmp/mysqld_exporter-{{ mysqld_exporter_version }}.linux-{{ go_arch\
          \ }}.tar.gz"
        dest: "/tmp"
        creates: "/tmp/mysqld_exporter-{{ mysqld_exporter_version }}.linux-{{ go_arch\
          \ }}/mysqld_exporter"
      check_mode: false

    - name: Link to mysqld_exporter binaries directory
      become: false
      ansible.builtin.file:
        src: "/tmp/mysqld_exporter-{{ mysqld_exporter_version }}.linux-amd64"
        dest: "/tmp/mysqld_exporter-linux-amd64"
        state: link
      check_mode: false

    - name: Install pyOpenSSL for certificate generation
      ansible.builtin.pip:
        name: "pyOpenSSL"

    - name: Create private key
      community.crypto.openssl_privatekey:
        path: "/tmp/tls.key"

    - name: Create CSR
      community.crypto.openssl_csr:
        path: "/tmp/tls.csr"
        privatekey_path: "/tmp/tls.key"

    - name: Create certificate
      community.crypto.x509_certificate:
        path: "/tmp/tls.cert"
        csr_path: "/tmp/tls.csr"
        privatekey_path: "/tmp/tls.key"
        provider: selfsigned

- name: Run target preparation
  hosts: all
  any_errors_fatal: true
  tasks:
    - name: Create mysqld_exporter cert dir
      ansible.builtin.file:
        path: "{{ mysqld_exporter_tls_server_config.cert_file | dirname }}"
        state: directory
        owner: root
        group: root
        mode: u+rwX,g+rwX,o=rX

    - name: Copy cert and key
      ansible.builtin.copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default('0644') }}"
      loop:
        - src: "/tmp/tls.cert"
          dest: "{{ mysqld_exporter_tls_server_config.cert_file }}"
        - src: "/tmp/tls.key"
          dest: "{{ mysqld_exporter_tls_server_config.key_file }}"
