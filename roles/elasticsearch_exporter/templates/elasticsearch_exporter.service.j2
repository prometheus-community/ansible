{{ ansible_managed | comment }}

# Exposure level `systemd-analyze security`: 2.7 OK

[Unit]
Description=Prometheus Elasticsearch Exporter
After=network-online.target

[Service]
Type=simple
User={{ elasticsearch_exporter_system_user }}
Group={{ elasticsearch_exporter_system_group }}
ExecStart={{ elasticsearch_exporter_binary_install_dir }}/elasticsearch_exporter \
{% if elasticsearch_exporter_tls_server_config | length > 0 or elasticsearch_exporter_http_server_config | length > 0 or elasticsearch_exporter_basic_auth_users | length > 0 %}
    {% if elasticsearch_exporter_version is version('1.5.0', '>=') %}
    '--web.config.file={{ elasticsearch_exporter_config_dir }}/web_config.yml' \
    {% else %}
    '--web.config={{ elasticsearch_exporter_config_dir }}/web_config.yml' \
    {% endif %}
{% endif %}
{% if elasticsearch_exporter_web_disable_exporter_metrics %}
    '--web.disable-exporter-metrics' \
{% endif %}
{% if elasticsearch_exporter_version is version('1.5.0', '>=') and
      elasticsearch_exporter_web_listen_address is iterable and
      elasticsearch_exporter_web_listen_address is not mapping and
      elasticsearch_exporter_web_listen_address is not string %}
{%   for address in elasticsearch_exporter_web_listen_address %}
    '--web.listen-address={{ address }}' \
{%   endfor %}
{% else %}
    '--web.listen-address={{ elasticsearch_exporter_web_listen_address }}' \
{% endif %}
{% if elasticsearch_exporter_extra_args is iterable and
      elasticsearch_exporter_extra_args is not mapping and
      elasticsearch_exporter_extra_args is not string %}
{%   for item in elasticsearch_exporter_extra_args %}
    '{{ item }}' \
{%   endfor %}
{% else %}
    '{{ elasticsearch_exporter_extra_args }}' \
{% endif %}
    '--web.telemetry-path={{ elasticsearch_exporter_web_telemetry_path }}'

SyslogIdentifier=elasticsearch_exporter
Restart=always
RestartSec=1
StartLimitInterval=0

{% set ns = namespace(protect_home = 'yes') %}
{% for m in ansible_facts['mounts'] if m.mount.startswith('/home') %}
{%   set ns.protect_home = 'read-only' %}
{% endfor %}
{% if elasticsearch_exporter_textfile_dir.startswith('/home') %}
{%   set ns.protect_home = 'read-only' %}
{% endif %}
ProtectHome={{ ns.protect_home }}
NoNewPrivileges=yes
PrivateTmp=true
UMask=077

{% if (ansible_facts.packages.systemd | first).version is version('232', '>=') %}
ProtectSystem=strict
ProtectProc=noaccess
ProtectControlGroups=true
ProtectKernelModules=true
ProtectKernelTunables=yes
ProtectHostname=yes
ProtectClock=yes
LockPersonality=true
RestrictRealtime=true
RestrictNamespaces=yes
RestrictSUIDSGID=yes
MemoryDenyWriteExecute=yes
RemoveIPC=yes
{% else %}
ProtectSystem=full
{% endif %}

IPAccounting=yes
IPAddressAllow=localhost link-local multicast 10.0.0.0/8 192.168.0.0/16
# IPAddressDeny=

CapabilityBoundingSet=~CAP_AUDIT_CONTROL CAP_AUDIT_READ CAP_DAC_READ_SEARCH
CapabilityBoundingSet=~CAP_BLOCK_SUSPEND
CapabilityBoundingSet=~CAP_BPF
CapabilityBoundingSet=~CAP_DAC_* CAP_FOWNER CAP_IPC_OWNER
CapabilityBoundingSet=~CAP_FSETID CAP_SETFCAP
CapabilityBoundingSet=~CAP_IPC_LOCK
CapabilityBoundingSet=~CAP_KILL
CapabilityBoundingSet=~CAP_LEASE
CapabilityBoundingSet=~CAP_LINUX_IMMUTABLE
CapabilityBoundingSet=~CAP_MKNOD
CapabilityBoundingSet=~CAP_NET_ADMIN
CapabilityBoundingSet=~CAP_NET_BIND_SERVICE CAP_NET_BROADCAST
CapabilityBoundingSet=~CAP_NET_RAW
CapabilityBoundingSet=~CAP_SETUID CAP_SETGID CAP_SETPCAP
CapabilityBoundingSet=~CAP_SYS_CHROOT
CapabilityBoundingSet=~CAP_SYS_PACCT
CapabilityBoundingSet=~CAP_SYS_TTY_CONFIG
CapabilityBoundingSet=~CAP_SYS_ADMIN
CapabilityBoundingSet=~CAP_SYS_NICE CAP_SYS_RESOURCE
CapabilityBoundingSet=~CAP_SYS_BOOT
CapabilityBoundingSet=~CAP_SYS_RAWIO
CapabilityBoundingSet=~CAP_SYS_PTRACE

{% if not (ansible_virtualization_type is defined and
          (ansible_virtualization_type == "lxc" or ansible_virtualization_type == "docker")
        )
%}
SystemCallFilter=@system-service @privileged @resources
{% endif %}
SystemCallFilter=~@clock @cpu-emulation @debug @mount @obsolete @privileged @raw-io @reboot @resources @swap @module
SystemCallArchitectures=native
# When system call is disallowed, return error code instead of killing process
SystemCallErrorNumber=EPERM

{% if elasticsearch_exporter_cgroups_restriction_enable is defined and elasticsearch_exporter_cgroups_restriction_enable|bool %}
CPUWeight={{ elasticsearch_exporter_cgroups_cpushares | default('80') }}
CPUQuota={{ elasticsearch_exporter_cgroups_cpuquota | default('40%') }}
MemoryMax={{ elasticsearch_exporter_cgroups_memorylimit | default('2G') }}
IOWeight={{ elasticsearch_exporter_cgroups_ioweight | default('80') }}
{% endif %}

[Install]
WantedBy=multi-user.target
